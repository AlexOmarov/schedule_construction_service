# -------------------------- Versions ----------------------------
[versions]
# Kotlin
kotiln="1.7.21"

# Cache
ehcache="3.10.8"

# Spring
spring-boot="2.7.7"
spring-boot-dm="1.1.0"
spring-cloud="3.1.5"

# OpenApi
openapi="1.6.14"

# DB
r2dbc_postgres="0.8.13.RELEASE"

# Swagger
swagger="2.2.7"

# Publication
sonarqube = "3.3"

# Tests
junit="5.9.0"
testcontainers="1.17.6"
mockito="4.1.0"
awaitility="4.2.0"
# -------------------------- Versions ----------------------------


# -------------------------- Libraries ---------------------------
[libraries]

# Spring
spring-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache" }
spring-starter-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc" }
spring-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-starter-sleuth = { module = "org.springframework.cloud:spring-cloud-sleuth-zipkin", version.ref="spring-cloud" }
spring-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }

# Metrics
micrometr = { module = "io.micrometer:micrometer-registry-prometheus" }

# DB
flyway = { module = "org.flywaydb:flyway-core" }
postgres = { module = "org.postgresql:postgresql" }
postgres-r2dbc = { module = "io.r2dbc:r2dbc-postgresql", version.ref = "r2dbc_postgres" }

# OpenApi
openapi-webflux-ui = { module = "org.springdoc:springdoc-openapi-webflux-ui", version.ref = "openapi" }
openapi-kotlin = { module = "org.springdoc:springdoc-openapi-kotlin", version.ref = "openapi" }
openapi-security = { module = "org.springdoc:springdoc-openapi-security", version.ref = "openapi" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger" }

# Cache
ehcache = { module="org.ehcache:ehcache", version.ref="ehcache" }

# Tests
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }
awaitility = { module = "org.awaitility:awaitility-kotlin", version.ref = "awaitility" }
reactor-test = { module = "io.projectreactor:reactor-test" }

# -------------------------- Libraries ---------------------------


# --------------------------- Plugins ----------------------------
[plugins]

spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-boot-dm = { id = "io.spring.dependency-management", version.ref = "spring-boot-dm" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotiln" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotiln" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
# --------------------------- Plugins ----------------------------
